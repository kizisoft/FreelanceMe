@using FreelanceMe.Web.InputModels.Profile
@model ProfileInputViewModel

@{
    ViewBag.Title = "Edit Profile";
}

<h2 class="text-center "><u>Welcome <b><em>@this.User.Identity.Name</em></b> !</u></h2>
<br />

@if (Model == null)
{
    @CustomWorning.Create("Attention!", "Please complete your profile information to be able to use a full functionality of this site!");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="form-horizontal">
            <h4>@ViewBag.Title</h4>
            <hr />
            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Avatar, new { @class = "control-label" })
                    <div class="text-center avatar-container">
                        <span id="avatar-glyph" class="glyphicon glyphicon glyphicon-user avatar-image" aria-hidden="true"></span>
                        <img id="avatar-image" class="avatar-image" src="#" alt="Avatar" />
                        <div id="avatar-header" class="avatar-header" data-toggle="tooltip" data-placement="right" title="Tooltip on right"></div>
                        <span id="avatar-clear" class="pull-right">X</span>
                        <div class="avatar-label">
                            <span id="avatar-text">Add Profile Picture</span>
                            <input id="avatar-file" type="file" name="avatar-image" class="avatar-btn" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jquery")

    <script>
        $('#avatar-clear').on('click', function () {
            $('#avatar-file').val('');
            $('#avatar-image').attr('src', '');
            $('#avatar-text').html('Add Profile Picture');
            $('#avatar-header').slideToggle();
            $('#avatar-clear').slideToggle();
            $('#avatar-image').hide();
            $('#avatar-glyph').show();
        });

        $('#avatar-file').on('change', function () {
            var input = $('#avatar-file')[0];
            var fReader = new FileReader();
            fReader.readAsDataURL(input.files[0]);
            fReader.onloadend = function (event) {
                var img = $('#avatar-image').attr('src', event.target.result);
                $('#avatar-text').html('Change Profile Picture');
                $('#avatar-header').slideToggle();
                $('#avatar-clear').slideToggle();
                $('#avatar-image').show();
                $('#avatar-glyph').hide();
            }
        });
    </script>
}