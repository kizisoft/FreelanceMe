@using FreelanceMe.Web.InputModels.Profile
@model ProfileInputViewModel

@{
    ViewBag.Title = "Edit Profile";
}

<h2 class="text-center "><u>Welcome <b><em>@this.User.Identity.Name</em></b> !</u></h2>
<br />

@if (Model == null)
{
    @CustomWorning.Create("Attention!", "Please complete your profile information to be able to use a full functionality of this site!");
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="form-horizontal">
            <h4>@ViewBag.Title</h4>
            <hr />
            <div class="col-md-6">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Avatar, new { @class = "control-label" })

                    <div class="avatar-container text-center">
                        <span id="avatar-glyph" class="avatar-image avatar-glyph glyphicon glyphicon-user" aria-hidden="true"></span>
                        <img id="avatar-image" class="avatar-image hidden" src="#" alt="Avatar" />
                        <div class="avatar-menu">
                            <a href="" id="btn-del" class="btn-btn btn-del avatar-btn avatar-btn-del glyphicon glyphicon-trash hidden" title="Delete Profile Picture"></a>
                            <a href="" id="btn-add" class="btn-btn btn-add avatar-btn avatar-btn-add glyphicon glyphicon-plus" title="Add Profile Picture">
                                <input id="avatar-file" class="avatar-file" type="file" name="avatar-image" />
                            </a>
                            <a href="" id="btn-save" class="btn-btn btn-save avatar-btn avatar-btn-save glyphicon glyphicon-floppy-save hidden" title="Save Profile Picture"></a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        $('#avatar-file').hover(function (e) {
            $('#btn-add').toggleClass('avatar-file-hover');
        },
        function (e) {
            $('#btn-add').toggleClass('avatar-file-hover')
        });

        $('#btn-del').on('click', function () {
            debugger;
            $('#avatar-glyph').toggleClass('hidden');
            $('#avatar-image').toggleClass('hidden');
            $('#avatar-file').val('');
            $('#avatar-image').attr('src', '');
            $('#btn-del').toggleClass('hidden');
            $('#btn-save').toggleClass('hidden');
        });

        $('#avatar-file').on('change', function () {
            var input = $('#avatar-file')[0];
            var fReader = new FileReader();
            fReader.readAsDataURL(input.files[0]);
            fReader.onloadend = function (event) {
                $('#avatar-image').attr('src', event.target.result);
                $('#avatar-glyph').toggleClass('hidden');
                $('#avatar-image').toggleClass('hidden');
                $('#btn-del').toggleClass('hidden');
                $('#btn-save').toggleClass('hidden');
            }
        });
    </script>
}